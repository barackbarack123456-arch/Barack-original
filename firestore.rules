rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isUserAdmin() {
      // Check if the user has the 'admin' role in their user document OR if they are the designated "God Mode" user.
      return get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.role == 'admin'
          || request.auth.uid == 'KTIQRzPBRcOFtBRjoFViZPSsbSq2';
    }

    function canCreateUpdate() {
      let userRole = get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.role;
      return isUserAdmin() || userRole == 'editor';
    }

    // --- USUARIOS ---
    match /usuarios/{userId} {
      // Los admins pueden listar todos los usuarios.
      allow list: if isUserAdmin();

      // Un usuario puede leer su propio perfil. Los admins pueden leer todos.
      allow read: if request.auth.uid == userId || isUserAdmin();

      // Un usuario puede crear su propio documento de perfil durante el registro.
      allow create: if request.auth.uid == userId;

      // Un usuario puede actualizar su propio perfil (nombre, avatar, etc.).
      // Los administradores pueden actualizar cualquier perfil (para cambiar roles, etc.).
      allow update: if request.auth.uid == userId || isUserAdmin();

      // Solo los administradores pueden eliminar usuarios.
      allow delete: if isUserAdmin();
    }

    // --- COLECCIONES DE DATOS ESPECÍFICAS ---
    // Se aplica la misma lógica de permisos a varias colecciones de datos.
    match /productos/{docId} {
      allow read: if request.auth != null;
      allow create, update: if canCreateUpdate();
      allow delete: if isUserAdmin();
    }
    match /semiterminados/{docId} {
      allow read: if request.auth != null;
      allow create, update: if canCreateUpdate();
      allow delete: if isUserAdmin();
    }
    match /insumos/{docId} {
      allow read: if request.auth != null;
      allow create, update: if canCreateUpdate();
      allow delete: if isUserAdmin();
    }
    match /clientes/{docId} {
      allow read: if request.auth != null;
      allow create, update: if canCreateUpdate();
      allow delete: if isUserAdmin();
    }
    match /sectores/{docId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if canCreateUpdate();
      allow delete: if isUserAdmin();
    }
    match /procesos/{docId} {
      allow read: if request.auth != null;
      allow create, update: if canCreateUpdate();
      allow delete: if isUserAdmin();
    }
    match /proveedores/{docId} {
      allow read: if request.auth != null;
      allow create, update: if canCreateUpdate();
      allow delete: if isUserAdmin();
    }
    match /unidades/{docId} {
      allow read: if request.auth != null;
      allow create, update: if canCreateUpdate();
      allow delete: if isUserAdmin();
    }
    match /proyectos/{docId} {
      allow read: if request.auth != null;
      allow create, update: if canCreateUpdate();
      allow delete: if isUserAdmin();
    }

    match /roles/{docId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if canCreateUpdate();
      allow delete: if isUserAdmin();
    }

    // --- TAREAS ---
    // Las tareas tienen su propia lógica de permisos más detallada.
    match /tareas/{taskId} {
      // Cualquier usuario autenticado puede crear una tarea.
      allow create: if request.auth != null;

      // Un usuario puede leer una tarea si es pública, si se le asignó o si la creó.
      // Los administradores pueden leer todas las tareas.
      allow read: if request.auth != null &&
                    (isUserAdmin() ||
                     resource.data.isPublic == true ||
                     resource.data.assigneeUid == request.auth.uid ||
                     resource.data.creatorUid == request.auth.uid);

      // Un usuario puede actualizar una tarea si se le asignó o si la creó.
      // Los administradores pueden actualizar cualquier tarea.
      allow update: if request.auth != null &&
                      (isUserAdmin() ||
                       resource.data.assigneeUid == request.auth.uid ||
                       resource.data.creatorUid == request.auth.uid);

      // Un usuario solo puede eliminar una tarea que él mismo creó.
      // Los administradores pueden eliminar cualquier tarea.
      allow delete: if request.auth != null &&
                      (isUserAdmin() || resource.data.creatorUid == request.auth.uid);
    }
  }
}
